{"ast":null,"code":"var _jsxFileName = \"/Users/firuzaa8/Desktop/Clicky-Game/clickygame/src/components/Game.js\";\nimport React from \"react\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Brian from \"../images/brian.jpg\";\nimport Peter from \"../images/peter.jpeg\";\nimport Bruce from \"../images/bruce.jpeg\";\nimport Chris from \"../images/chris.jpg\";\nimport Cleveland from \"../images/cleveland.jpg\";\nimport Consuela from \"../images/consuela.png\";\nimport Joe from \"../images/joe.jpeg\";\nimport Lois from \"../images/lois.jpeg\";\nimport Meg from \"../images/meg.jpg\";\nimport Mort from \"../images/mort.jpg\";\nimport Quagmire from \"../images/quagmire.png\";\nimport Stewie from \"../images/stewie.jpg\";\nimport Column from \"./Column\";\nimport Header from \"./Header\";\nimport Topfooter from \"./Topfooter\";\n\nclass Game extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0,\n      guessed: false,\n      topScore: 0,\n      imageArray: [Brian, Peter, Bruce, Chris, Cleveland, Consuela, Joe, Lois, Meg, Mort, Quagmire, Stewie],\n      clickedArray: []\n    };\n\n    this.shuffleCards = () => {\n      var array = this.state.imageArray;\n      var i = array.length,\n          j = 0,\n          temp;\n\n      while (i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n    };\n\n    this.gameCount = event => {\n      this.state.clickedArray.push(this.props.img);\n      this.shuffleCards();\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.topScoreCount = () => {\n      this.setState({\n        topScore: this.state.topScore + 1\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, console.log(this.state.clickedArray), React.createElement(Topfooter, {\n      count: this.state.count,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Column, {\n      img: this.state.imageArray[0],\n      \"data-char\": this.state.imageArray[0],\n      onClick: this.gameCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Column, {\n      img: this.state.imageArray[1],\n      \"data-char\": this.state.imageArray[1],\n      onClick: this.gameCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Column, {\n      img: this.state.imageArray[2],\n      \"data-char\": this.state.imageArray[2],\n      onClick: this.gameCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Column, {\n      img: this.state.imageArray[3],\n      \"data-char\": this.state.imageArray[3],\n      onClick: this.gameCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Column, {\n      img: this.state.imageArray[4],\n      \"data-char\": this.state.imageArray[4],\n      onClick: this.gameCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Column, {\n      img: this.state.imageArray[5],\n      \"data-char\": this.state.imageArray[5],\n      onClick: this.gameCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Column, {\n      img: this.state.imageArray[6],\n      \"data-char\": this.state.imageArray[6],\n      onClick: this.gameCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Column, {\n      img: this.state.imageArray[7],\n      \"data-char\": this.state.imageArray[7],\n      onClick: this.gameCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Column, {\n      img: this.state.imageArray[8],\n      \"data-char\": this.state.imageArray[8],\n      onClick: this.gameCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Column, {\n      img: this.state.imageArray[9],\n      \"data-char\": this.state.imageArray[9],\n      onClick: this.gameCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Column, {\n      img: this.state.imageArray[10],\n      \"data-char\": this.state.imageArray[10],\n      onClick: this.gameCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Column, {\n      img: this.state.imageArray[11],\n      \"data-char\": this.state.imageArray[0],\n      onClick: this.gameCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/firuzaa8/Desktop/Clicky-Game/clickygame/src/components/Game.js"],"names":["React","Container","Row","Brian","Peter","Bruce","Chris","Cleveland","Consuela","Joe","Lois","Meg","Mort","Quagmire","Stewie","Column","Header","Topfooter","Game","Component","state","count","guessed","topScore","imageArray","clickedArray","shuffleCards","array","i","length","j","temp","Math","floor","random","gameCount","event","push","props","img","setState","topScoreCount","render","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Brian from \"../images/brian.jpg\";\nimport Peter from \"../images/peter.jpeg\";\nimport Bruce from \"../images/bruce.jpeg\";\nimport Chris from \"../images/chris.jpg\";\nimport Cleveland from \"../images/cleveland.jpg\";\nimport Consuela from \"../images/consuela.png\";\nimport Joe from \"../images/joe.jpeg\";\nimport Lois from \"../images/lois.jpeg\";\nimport Meg from \"../images/meg.jpg\";\nimport Mort from \"../images/mort.jpg\";\nimport Quagmire from \"../images/quagmire.png\";\nimport Stewie from \"../images/stewie.jpg\";\nimport Column from \"./Column\";\nimport Header from \"./Header\";\nimport Topfooter from \"./Topfooter\";\n\nclass Game extends React.Component {\n\n    state = {\n        count: 0,\n        guessed: false,\n        topScore: 0,\n        imageArray: [Brian, Peter, Bruce, Chris, Cleveland, Consuela, Joe, Lois, Meg, Mort, Quagmire, Stewie],\n        clickedArray: []\n        \n    };\n\n    shuffleCards = () => {\n        var array = this.state.imageArray;\n        var i = array.length,\n          j = 0,\n          temp;\n    \n        while (i--) {\n          j = Math.floor(Math.random() * (i + 1));\n    \n          temp = array[i];\n          array[i] = array[j];\n          array[j] = temp;\n        }\n      }\n\n    gameCount = (event) => {\n        this.state.clickedArray.push(this.props.img);\n        this.shuffleCards();\n        this.setState({ count: this.state.count + 1 });\n    \n\n    };\n\n    topScoreCount = () => {\n\n        this.setState({ topScore: this.state.topScore + 1 });\n\n    };\n\n\n    render() {\n\n        return (\n            \n            <div>\n            {console.log(this.state.clickedArray)}\n                <Topfooter count={this.state.count}/>\n                <Header />\n                <Container>\n                    <Row>\n                        <Column img={this.state.imageArray[0]} data-char={this.state.imageArray[0]} onClick={this.gameCount} />\n                        <Column img={this.state.imageArray[1]} data-char={this.state.imageArray[1]} onClick={this.gameCount}/>\n                        <Column img={this.state.imageArray[2]} data-char={this.state.imageArray[2]} onClick={this.gameCount}/>\n                        <Column img={this.state.imageArray[3]} data-char={this.state.imageArray[3]} onClick={this.gameCount}/>\n                    </Row>\n                    <Row>\n                        <Column img={this.state.imageArray[4]} data-char={this.state.imageArray[4]} onClick={this.gameCount}/>\n                        <Column img={this.state.imageArray[5]} data-char={this.state.imageArray[5]} onClick={this.gameCount}/>\n                        <Column img={this.state.imageArray[6]} data-char={this.state.imageArray[6]} onClick={this.gameCount}/>\n                        <Column img={this.state.imageArray[7]} data-char={this.state.imageArray[7]} onClick={this.gameCount}/>\n                    </Row>\n                    <Row>\n                        <Column img={this.state.imageArray[8]} data-char={this.state.imageArray[8]} onClick={this.gameCount}/>\n                        <Column img={this.state.imageArray[9]} data-char={this.state.imageArray[9]} onClick={this.gameCount}/>\n                        <Column img={this.state.imageArray[10]} data-char={this.state.imageArray[10]}onClick={this.gameCount}/>\n                        <Column img={this.state.imageArray[11]} data-char={this.state.imageArray[0]} onClick={this.gameCount}/>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}